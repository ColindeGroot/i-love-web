[
    {
        "date": "03-02-2025",
        "title": "Introductie nodejs",
        "contentBlocks": [
            {
                "content": "Vandaag hebben we een introductie gekeregen met nodejs en liquid. Met liquid kan je heel makkelijk json ophalen en weergeven in html"
            },
            {
                "content": "Tijdens de expo zijn twee personen van mijn opdrachtgever nog langs gekomen om nog een keer mijn project en dat van andere studenten te bekijken. Hier heb ik ze doorlopen door mijn website en wat verteld over het werk van andere studenten."
            }
        ]
    },
    {
        "date": "05-02-2025",
        "title": "Visite kaartje met node en liquid",
        "contentBlocks": [
            {
                "content": "Vandaag zijn we begonnen met het bouwen van ons visitekaartje met nodejs. Hier hebben we gebruik gemaakt van de restAPI en hebben we JSON gepasrt: <code> const personResponseJSON = await personResponse.json() <br/> const customProp = JSON.parse(personResponseJSON.data.custom) </code>",
                "listTitle": "Mijn planning voor de rest van de week",
                "listItems": [
                    "Mijn animatie met offset path afmaken",
                    "Meer custom data toevoegen zodat mijn kaartje zo dynamisch mogelijk is",
                    "Nieuwe routes aanmaken om custom data mee te geven"
                ]
            }
        ]
    },
    {
        "date": "07-02-2025",
        "title": "Code/Design review kaartje",
        "contentBlocks": [
            {
                "content": "Vandaag hebben we een ocde en design review gehad op ons kaartje."
            },
            {
                "content": "We hebben elkaar door middel van issues op onze <a href='https://github.com/ColindeGroot/connect-your-tribe-profile-card/issues/1'>Github repo</a>. Zo heb ik feedback gekregen op mijn kleurgebruik van mijn kaartje en heb ik geleerd dat ik mijn render server eerder moet opstarten zodat ik sneller een review kan krijgen"
            }
        ]
    },
    {
        "date": "28-2-2025",
        "title": "Vragenlijst",
        "contentBlocks": [
            {
                "content": "Vandaag hebben we een reflectie over afeglopen sprint en beschrijven we met illustatraties hoe wij de samenwerking hebben ervaren.",
                "listTitle": "Vragen voor mezelf",
                "listItems": [
                    "Ik kan uitleggen wat NodeJS is en waarvoor het gebruikt wordt: 3 ",
                    "Ik weet wat het doel van package.json is en heb hier aanpassingen ingemaakt: 2",
                    "Ik heb met npm packages geïnstalleerd en gebruikt in het bestand server.js: 3- Gebruik van express en routes",
                    "Ik kan met commando’s in de terminal een NodeJSproject stoppen en starten: 3- control+C (^c) en npm start etc.",
                    "Ik weet waarom ik mijn NodeJS project regelmatig moet herstarten en kan dit uitleggen: 3- Bij aanpassingen in de server moet je herstarten omdat de aanpassingen niet lokaal zijn moet je de server herstarten",
                    "Ik heb een strategie voor debuggen inNodeJS: 2- console.log voor bekijken van data en eventuele errors als iets niet opgehaald word",
                    "Ik kan uitleggen wat Express.js doet en waarom het nodig is om met NodeJS een website te bouwen: 2- aanmaken van routes om pagina's weer te geven (server side rendering)",
                    "Ik weet wat routes zijn en kan zelf een nieuwe route aanmaken: 2- met een get haal je route op ( .get(route) ) en met post kan je op de route data versturen",
                    "Ik weet wat request en response argumenten zijn in een functie voor het laden van data: 1- request wanneer je iets wilt ophalen en response voor bijv het renderen van de pagina nadat je data van de request binnen is ",
                    "Ik heb gebruik gemaakt van een request parameter om specifieke data te laden: 2- voor de message functie heb ik een request in de http gebruikt om de berichten van de juiste persoon op te halen",
                    "Ik kan uitleggen wat Liquid doet en waarom het nodig is om met Express.js een website te maken:2- liquid is dynamisch en heeft express nodig om de data op te kunnen halen van de server",
                    "Ik weet hoe ik data naar Liquid verstuur om dit te gebruiken bij het renderen van een pagina: 2- met for loops en if statement heb ik data opgehaald uit objecten",
                    "Ik weet hoe ik Liquid filters toe kan passen en waar ik kan vinden hoe die werken: 2- liquid heeft een docs met filters. Ik heb zelf enkel een default filter gebruikt",
                    "Ik heb een nieuwe route gemaakt en nieuwe data meegegeven aan een Liquid view: 3- Ik heb meerde nieuwe pagina's gemaakt en daar data aan meegegeven zoals de student page met messages",
                    "Ik weet waar een foreach loop voor gebruikt wordt en pas het toe in een Liquid view om HTML te renderen:2- ik heb een for loop gebruik voor de kaartjes. Voor elk student in de lijst word een kaartje gemaakt ",
                    "Ik kan in Liquid een controle maken waarmee de avatar niet getoond wordt als deze niet in whois.fdnd.nl is ingevuld:3- Dit heb ik gedaan op mijn eigen squadpage: <code>{% if person.avatar != blank %}</code>",
                    "Ik heb een strategie voor debuggen in Liquid: 1- je kan normale script gebruiken met een log maar liquid bied ook een comments functie aan (niet gebruikt)",
                    "Ik kan data fetchen uit een REST API: 2- Ik heb alleen nog wel moeite met de juiste filters gebruiken in de url",
                    "Ik snap het verschil tussen HTTP requests van de methodes GET en POST: 3- GET om op te halen POST om te versturen",
                    "Ik kan data uit een REST API filteren of sorteren: 2- Ik weet welke filters ik kan gebruiken maar vind het soms nog lastig om deze te verwerken in de URL ",
                    "Ik snap wat het async keyword doet in JavaScript code: 2- met async wat je met uitvoeren van de functie totdat alle data is:  ",
                    "Ik weet wat het doel is van een try/catch block en kan het gebruiken bij het parsen van JSON: 0-",
                    "Ik begrijp het verschil tussen client-side JavaScript en server-side JavaScript en wanneer ik welke het handigst in kan zetten: 1- Bij client side worden er dingen opgeslagen bij de cleint en niet de server als de client is client-side post is het niet voor andere te zien",
                    "Ik kan formulierdata die is ge-POSTopslaan ineen variabele op de server en gebruiken bijhet renderenvan een pagina",
                    "Ik kan formulierdata die is ge-POST door middelvan een POST of PATCHHTTP request opslaan in de REST API"
                ]
            }
        ]
    }
]